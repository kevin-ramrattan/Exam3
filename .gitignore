#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define flush fflush(stdin)
#define cls system ("cls")
#define pause system ("pause")
#define SIZE 20

typedef struct{

	double win;
	double lose;
	double PCT;
	int total;
	int RunsScore;
	int RunsAgainst;
	char name[SIZE];

} major;//end of struct 

//function prototype
int mainMenu();
void Game(major *Atlanta, major *chicago, int *counter, int *flag);
void reset(major *Atlanta, major *chicago, int *counter, int *flag);
void display(major Atlanta,major chicago, int flag);


main(){
	int choice=0;
	int counter=0;
	int flag=1;
	//major
	major Atlanta;            major chicago;               /*major team3;              major team4;*/

	Atlanta.win=0.0;            chicago.win=0.0;           /*team3.win=0.0;             team4.win=0.0;*/
	Atlanta.lose=0.0;           chicago.lose=0.0;          /*team3.lose=0.0;            team4.lose=0.0;*/
	Atlanta.PCT=0.0;            chicago.PCT=0.0;          /* team3.PCT=0.0;             team4.PCT=0.0;*/
	Atlanta.RunsScore=0;        chicago.RunsScore=0;      /* team3.RunsScore=0.0;       team4.RunsScore=0.0;*/
	Atlanta.RunsAgainst=0;      chicago.RunsAgainst=0;    /* team3.RunsAgainst=0.0;     team4.RunsAgainst=0.0;*/
	Atlanta.name[SIZE]='\0';    chicago.name[SIZE]='\0';   /*team3.name[SIZE]='\0';     team4.name[SIZE]='\0';*/
	Atlanta.total=0;            chicago.total=0;           /*team3.total=0;             team4.total=0;*/

	/*major team5;            major team6;               major team7;              major team8;

	team5.win=0.0;            team6.win=0.0;           team7.win=0.0;             team8.win=0.0;
	team5.lose=0.0;           team6.lose=0.0;          team7.lose=0.0;            team8.lose=0.0;
	team5.PCT=0.0;            team6.PCT=0.0;           team7.PCT=0.0;             team8.PCT=0.0;
	team5.RunsScore=0;        team6.RunsScore=0;       team7.RunsScore=0.0;       team8.RunsScore=0.0;
	team5.RunsAgainst=0;      team6.RunsAgainst=0;     team7.RunsAgainst=0.0;     team8.RunsAgainst=0.0;
	team5.name[SIZE]='\0';    team6.name[SIZE]='\0';   team7.name[SIZE]='\0';     team8.name[SIZE]='\0';
	team5.total=0;            team6.total=0;           team7.total=0;             team8.total=0;


	major team9;            major team10;               major team11;              major team12;

	team9.win=0.0;            team10.win=0.0;           team11.win=0.0;             team12.win=0.0;
	team9.lose=0.0;           team10.lose=0.0;          team11.lose=0.0;            team12.lose=0.0;
	team9.PCT=0.0;            team10.PCT=0.0;           team11.PCT=0.0;             team12.PCT=0.0;
	team9.RunsScore=0;        team10.RunsScore=0;       team11.RunsScore=0.0;       team12.RunsScore=0.0;
	team9.RunsAgainst=0;      team10.RunsAgainst=0;     team11.RunsAgainst=0.0;     team12.RunsAgainst=0.0;
	team9.name[SIZE]='\0';    team10.name[SIZE]='\0';   team11.name[SIZE]='\0';     team12.name[SIZE]='\0';
	team9.total=0;            team10.total=0;           team11.total=0;             team12.total=0;
*/

	do{
		cls;
		choice = mainMenu();
		switch(choice){
		case 1:
			Game(&Atlanta,&chicago,&counter,&flag);
			break;
		case 2:
			display(Atlanta,chicago,flag);
			break;
		case 3:
			reset(&Atlanta,&chicago,&counter,&flag);
			break;
		case 4:
			printf("See you\n\n");
			pause;
		}//End of switch
	}while(choice!=4);

}//end of main

int mainMenu(){
	int i=0;
	printf("1) Enter the result of a game\n");
	printf("2) Display the league standings \n");
	printf("3) Restart the entire season \n");
	printf("4) Quit the program\n");
	scanf("%i",&i);
	flush;
	return i;
}

void Game(major *Atlanta, major *chicago, int *counter, int *flag){

	cls;
	if(*flag == 1){
		printf("Enter team name\n\n");
		scanf("%s",Atlanta->name);
		printf("Enter team name\n\n");
		scanf("%s",chicago->name);
	}//end of if 
	printf("%s - ",Atlanta->name);
	scanf("%i",&Atlanta->RunsScore);
	flush;
	printf("%s - ",chicago->name);
	scanf("%i",&chicago->RunsScore);
	flush;
	(*counter)++;

	if(Atlanta->RunsScore>chicago->RunsScore){
		Atlanta->win=Atlanta->win+1;
		chicago->lose=chicago->lose+1;
		Atlanta->PCT=(Atlanta->win)/(*counter);
		chicago->PCT=chicago->win/ *counter;
		Atlanta->total =Atlanta->total+Atlanta->RunsScore;
		chicago->total =chicago->total+chicago->RunsScore;
		Atlanta->RunsAgainst=Atlanta->RunsAgainst+chicago->RunsScore;
		chicago->RunsAgainst=chicago->RunsAgainst+Atlanta->RunsScore;
	}//End of 

	if(Atlanta->RunsScore == chicago->RunsScore){
		*counter--;
		Atlanta->total=Atlanta->total+Atlanta->RunsScore;
		chicago->total=chicago->total+chicago->RunsScore;
		Atlanta->RunsAgainst=Atlanta->RunsAgainst+chicago->RunsScore;
		chicago->RunsAgainst=chicago->RunsAgainst+Atlanta->RunsScore;
	}//end of if

	if(Atlanta->RunsScore<chicago->RunsScore){
		Atlanta->lose=Atlanta->lose+1;
		chicago->win=chicago->win+1;
		Atlanta->PCT=Atlanta->win/ *counter;
		chicago->PCT=chicago->win/ *counter;
		Atlanta->total=Atlanta->total+Atlanta->RunsScore;
		chicago->total=chicago->total+chicago->RunsScore;
		Atlanta->RunsAgainst=Atlanta->RunsAgainst+chicago->RunsScore;
		chicago->RunsAgainst=chicago->RunsAgainst+Atlanta->RunsScore;
	}//end of else

	*flag = 0;
}//end of Game

void display(major a,major c, int flag){
	cls;

	if(flag == 0){
		printf("Team\t\tWin\t\tLoses\tPCT\tRunscore\tRun Against\n");
		printf("----\t\t---\t\t-----\t---\t-------\t\t-----------\n");
		printf("%s\t\t%.0lf\t\t%.0lf\t%.3lf\t%i\t\t%i\n",a.name,a.win,a.lose,a.PCT,a.total,a.RunsAgainst);
		printf("%s\t\t%.0lf\t\t%.0lf\t%.3lf\t%i\t\t%i\n",c.name,c.win,c.lose,c.PCT,c.total,c.RunsAgainst);
		pause;
	}//End of if
	else{
		printf("Enter team info first\n"); 
		pause;
	}
}//End of display

void reset(major *Atlanta, major *chicago, int *counter, int *flag){
	cls;
	printf("Now This is New Season!\n\n");
	pause;
	Atlanta->win=0.0;            chicago->win=0.0;
	Atlanta->lose=0.0;           chicago->lose=0.0;
	Atlanta->PCT=0.0;            chicago->PCT=0.0;
	Atlanta->RunsScore=0;        chicago->RunsScore=0;
	Atlanta->RunsAgainst=0;      chicago->RunsAgainst=0;
	Atlanta->name[SIZE]='\0';    chicago->name[SIZE]='\0';
	Atlanta->total=0;            chicago->total=0;

	*flag = 1;
	*counter =0;
}//end of reset

///
